{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","React","memo","modalClosed","Modal","style","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","isPurchasable","ings","igkey","sum","purchaseHandler","purchaseCancelHandler","purchaseContinuedHandler","onInitPurchase","history","push","onInitIngredients","disableInfo","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","OrderSummary","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","display","checkoutCancelled","checkoutContinued","input","inputElement","validationError","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","valueType","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","forElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","withRouter","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchased","path","match","component","amount","ingredientOutput","ig","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","Boolean","window","location","hostname","INGREDIENT_PRICES","salad","cheese","bacon","meat","initialState","reducer","action","updatedState","JSON","parse","stringify","addIngredient","removeIngredient","setIngredient","fetchIngredientFail","console","log","purchaseBurgerInit","purchaseBurgerStart","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f7ca371.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load8\":\"Spinner_load8__36vjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport classes from './Logo.module.css';\nimport burgerLogo from '../../assets/images/burger-logo.png';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"Burger Logo\" />\n    </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link} \n            activeClassName={classes.active}\n            exact={props.exact}\n        >\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;\n","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burguer Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;\n","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport ToggleButton from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <ToggleButton clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}>{props.children}</div> : null\n);\n\nexport default backdrop;\n","import React from 'react';\n\nimport classes from './SideDrawer.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default sideDrawer;\n","import React, {Component} from 'react';\n\nimport Aux from '../Auxiliary/Auxiliary';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {\n        return(\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer \n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler}\n                />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    }\n}\n\nexport default Layout;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://the-burguer-builder-app.firebaseio.com/',\n});\n\nexport default instance;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch(this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>\n                break;\n            \n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n    \n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n    \n            case ('cheese'):\n                    ingredient = <div className={classes.Cheese}></div>\n                    break;\n                    \n            case ('salad'):\n                    ingredient = <div className={classes.Salad}></div>\n                    break;\n    \n            case ('bacon'):\n                    ingredient = <div className={classes.Bacon}></div>\n                    break;\n            \n            default:\n                ingredient = null;\n        }\n    \n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, index) => {\n                return <BurgerIngredient key={igKey + '_' + index} type={igKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) \n        transformedIngredients = <p>Please start adding ingredients!</p>;\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;\n","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less}\n            onClick={props.removed}\n            disabled={props.disabled}\n        >\n            Less\n        </button>\n        <button \n            className={classes.More}\n            onClick={props.added}\n        >\n            More\n        </button>\n    </div>\n);\n\nexport default buildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}€</strong></p>\n        {controls.map(ctrl => {\n            return <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>;\n        })}\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}\n        >\n            ORDER NOW\n        </button>\n    </div>\n);\n\nexport default buildControls;\n","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div \n            className={classes.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}\n        >\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default React.memo(modal);\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        className={[classes.Button, classes[props.btnType]].join(' ')} \n        onClick={props.clicked}\n        disabled={props.disabled}\n    >\n        {props.children}\n    </button>\n);\n\nexport default button;\n","import React from 'react';\n\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            );\n        });\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total price: {props.price.toFixed(2)}€</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    );\n}\n\nexport default orderSummary;\n","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary/Auxiliary';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        UNSAFE_componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, {Component} from 'react';\nimport axios from '../../axios-orders';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    isPurchasable = () => {\n        const ingredients = this.props.ings;\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinuedHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.props.ings\n        }\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p style={{textAlign: 'center'}}>Ingredients can't be loaded!</p> : <Spinner />;\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded} \n                        ingredientRemoved={this.props.onIngredientRemoved} \n                        disabled={disableInfo}\n                        price={this.props.price}\n                        purchasable={this.isPurchasable()} \n                        ordered={this.purchaseHandler}\n                    />\n                </Aux>\n            );\n\n            orderSummary = <OrderSummary \n                                ingredients={this.props.ings} \n                                purchaseCancelled={this.purchaseCancelHandler}\n                                purchaseContinued={this.purchaseContinuedHandler}\n                                price={this.props.price}\n                            />;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () =>  dispatch(actions.purchaseBurgerInit())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data));\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed());\n            });\n    };\n};\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json', orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\nexport const purchaseBurgerInit = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        id: key,\n                        ...res.data[key]\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err));\n            });\n    };\n};\n","import React from 'react';\n\nimport classes from './CheckoutSummary.module.css';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nconst checkoutSummary = (props) => {\n    return(\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it taste well!</h1>\n            <div style={{width: '100%', margin: 'auto', display: 'flex'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;\n","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let validationError = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n        validationError = <p>Please enter a valid {props.valueType}!</p>;\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        case ('select'):\n                inputElement = <select \n                                    className={inputClasses.join(' ')}\n                                    value={props.value}\n                                    onChange={props.changed}\n                                >\n                                    {props.elementConfig.options.map(option => (\n                                        <option key={option.value} value={option.value}>\n                                            {option.displayValue}\n                                        </option>\n                                    ))}\n                                </select>;\n                break;\n        default:\n            inputElement = <input \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n    }\n\n    return(\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default input;\n","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport axios from '../../../axios-orders';\n\nimport classes from './ContactData.module.css';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/order';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            },\n        },\n        formIsValid: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n\n        this.props.onOrderBurger(order);\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        });\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(forElement => (\n                    <Input \n                        key={forElement.id}\n                        elementType={forElement.config.elementType} \n                        elementConfig={forElement.config.elementConfig} \n                        value={forElement.config.value}\n                        valueType={forElement.config.elementConfig.placeholder}\n                        invalid={!forElement.config.valid}\n                        shouldValidate={forElement.config.validation}\n                        touched={forElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, forElement.id)}\n                    />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.props.loading) {\n            form = <Spinner />;\n        }\n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(withRouter(ContactData), axios));\n","import React, {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport CheckoutSmmary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n        \n        if (this.props.ings && !this.props.purchased) {\n            summary = (\n                <div>\n                    <CheckoutSmmary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} \n                    />\n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData} \n                    />\n                </div>\n            );\n        }\n\n        return summary;\n    }\n}\n\nconst mapStateToProps =  state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n                    style={{\n                        textTransform: 'capitalize',\n                        display: 'inline-block',\n                        margin: '0 8px',\n                        border: '1px solid #ccc',\n                        padding: '5px'\n                    }}\n                    key={ig.name}\n                >\n                    {ig.name} ({ig.amount})\n                </span>;\n    });\n\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}€</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, {Component} from 'react';\nimport axios from '../../axios-orders';\nimport {connect} from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount() {\n        this.props.onFetchOrders();\n    }\n\n    render() {\n        let orders = <Spinner />;\n\n        if (!this.props.loading) {\n            orders = (\n                <div>\n                    {this.props.orders.map(order => (\n                        <Order \n                            key={order.id}\n                            ingredients={order.ingredients}\n                            price={order.price}\n                        />\n                    ))}\n                </div>\n            );\n        }\n\n        return orders;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    bacon: 0.7,\n    meat: 1.3\n}\n\nconst BASE_PRICE = 4;\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: BASE_PRICE,\n    error: false\n};\n\nconst reducer = (state = initialState, action) => {\n    let updatedState = JSON.parse(JSON.stringify(state));\n\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT:\n            updatedState = addIngredient(state, action, updatedState);\n            break;\n        case actionTypes.REMOVE_INGREDIENT:\n            updatedState = removeIngredient(state, action, updatedState);\n            break;\n        case actionTypes.SET_INGREDIENTS:\n            updatedState = setIngredient(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            updatedState = fetchIngredientFail(state, action, updatedState);\n            break;\n        default:\n            console.log(\"[BurgerBuilder Reducer] Action default case\");\n            break;\n    }\n\n    return updatedState;\n};\n\nexport default reducer;\n\n// Auxiliary Functions\nconst addIngredient = (state, action, updatedState) => {\n    updatedState.ingredients[action.ingredientName] =  state.ingredients[action.ingredientName] + 1;\n    updatedState.totalPrice = state.totalPrice + INGREDIENT_PRICES[action.ingredientName];\n    return updatedState;\n}\n\nconst removeIngredient = (state, action, updatedState) => {\n    updatedState.ingredients[action.ingredientName] =  state.ingredients[action.ingredientName] - 1;\n    updatedState.totalPrice = state.totalPrice - INGREDIENT_PRICES[action.ingredientName];\n    return updatedState;\n}\n\nconst setIngredient = (state, action, updatedState) => {\n    let price = BASE_PRICE;\n    for (let ingredient in action.ingredients) {\n        price += INGREDIENT_PRICES[ingredient] * action.ingredients[ingredient];\n    }\n    updatedState.ingredients = {\n        salad: action.ingredients.salad,\n        cheese: action.ingredients.cheese,\n        bacon: action.ingredients.bacon,\n        meat: action.ingredients.meat\n    };\n    updatedState.totalPrice = price;\n    updatedState.error = false;\n    return updatedState;\n}\n\nconst fetchIngredientFail = (state, action, updatedState) => {\n    updatedState.error = true;\n    return updatedState;\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst reducer = (state = initialState, action) => {\n    let updatedState = JSON.parse(JSON.stringify(state));\n\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_BURGER_INIT:\n            updatedState = purchaseBurgerInit(state, action, updatedState);\n            break;\n        case actionTypes.PURCHASE_BURGER_START:\n            updatedState = purchaseBurgerStart(state, action, updatedState);\n            break;\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            updatedState = purchaseBurgerSuccess(state, action, updatedState);\n            break;\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            updatedState = purchaseBurgerFail(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_ORDERS_START:\n            updatedState = fetchOrdersStart(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            updatedState = fetchOrdersSuccess(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_ORDERS_FAIL:\n            updatedState = fetchOrdersFail(state, action, updatedState);\n            break;\n        default:\n            console.log(\"[Order Reducer] Action default case\");\n            break;\n    }\n\n    return updatedState;\n};\n\nexport default reducer;\n\n// Auxiliary Functions\nconst purchaseBurgerInit = (state, action, updatedState) => {\n    updatedState.purchased = false;\n    return updatedState;\n}\n\nconst purchaseBurgerStart = (state, action, updatedState) => {\n    updatedState.loading = true;\n    return updatedState;\n}\n\nconst purchaseBurgerSuccess = (state, action, updatedState) => {\n    const newOrder = {\n        id: action.orderId,\n        ...action.orderData\n    };\n    updatedState.loading = false;\n    updatedState.purchased = true;\n    updatedState.orders = state.orders.concat(newOrder);\n    return updatedState;\n}\n\nconst purchaseBurgerFail = (state, action, updatedState) => {\n    updatedState.loading = false;\n    return updatedState;\n}\n\nconst fetchOrdersStart = (state, action, updatedState) => {\n    updatedState.loading = true;\n    return updatedState;\n}\n\nconst fetchOrdersSuccess = (state, action, updatedState) => {\n    updatedState.loading = false;\n    updatedState.orders = action.orders;\n    return updatedState;\n}\n\nconst fetchOrdersFail = (state, action, updatedState) => {\n    updatedState.loading = false;\n    return updatedState;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename='/burguer-builder/'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}