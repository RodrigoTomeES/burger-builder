{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","className","classes","Content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","backdrop","show","Backdrop","clicked","modal","modalClosed","Modal","style","transform","opacity","orderSummary","ingredientSummary","textTransform","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurguerBuilder","state","totalPrice","purchasing","updatePurchaseState","sum","igkey","setState","addIngredientHandler","updateCount","updatedIngredients","newPrice","removeIngredientHandler","oldCount","purchaseHandler","purchaseCancelHandler","disableInfo","OrderSummary","App","Layout","BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b3370b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport Aux from '../../hoc/Auxiliary';\nimport classes from './Layout.module.css';\n\nconst layout = (props) => (\n    <Aux>\n        <div>Toolbar, SideDrawer, Backdrop</div>\n        <main className={classes.Content}>\n            {props.children}\n        </main>\n    </Aux>\n);\n\nexport default layout;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch(this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>\n                break;\n            \n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n    \n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n    \n            case ('cheese'):\n                    ingredient = <div className={classes.Cheese}></div>\n                    break;\n                    \n            case ('salad'):\n                    ingredient = <div className={classes.Salad}></div>\n                    break;\n    \n            case ('bacon'):\n                    ingredient = <div className={classes.Bacon}></div>\n                    break;\n            \n            default:\n                ingredient = null;\n        }\n    \n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, index) => {\n                return <BurgerIngredient key={igKey + '_' + index} type={igKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) \n        transformedIngredients = <p>Please start adding ingredients!</p>;\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;\n","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less}\n            onClick={props.removed}\n            disabled={props.disabled}\n        >\n            Less\n        </button>\n        <button \n            className={classes.More}\n            onClick={props.added}\n        >\n            More\n        </button>\n    </div>\n);\n\nexport default buildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => {\n            return <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>;\n        })}\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}\n        >\n            ORDER NOW\n        </button>\n    </div>\n);\n\nexport default buildControls;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}>props.children</div> : null\n);\n\nexport default backdrop;\n","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div \n            className={classes.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}\n        >\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default modal;\n","import React from 'react';\n\nimport Aux from '../../../hoc/Auxiliary';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            );\n        });\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>Continue to Checkout?</p>\n        </Aux>\n    );\n}\n\nexport default orderSummary;\n","import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    bacon: 0.7,\n    meat: 1.3\n}\n\nclass BurguerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            cheese: 0,\n            bacon: 0,\n            meat: 0,\n        },\n        totalPrice: 5,\n        purchasable: false,\n        purchasing: false,\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n\n        this.setState({purchasable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        // Updating ingredients\n        const oldCount = this.state.ingredients[type];\n        const updateCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updateCount;\n\n        // Updating pricing\n        const oldPrice = this.state.totalPrice;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const newPrice = oldPrice + priceAddition;\n\n        // Updating state\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice,\n        });\n\n        // Updating purchasable\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        // Updating ingredients\n        const oldCount = this.state.ingredients[type];\n        // You can't have negative ingredients\n        if (oldCount <= 0) return;\n        const updateCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updateCount;\n\n        // Updating pricing\n        const oldPrice = this.state.totalPrice;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const newPrice = oldPrice - priceDeduction;\n\n        // Updating state\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice,\n        });\n\n        // Updating purchasable\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.state.ingredients\n        }\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary ingredients={this.state.ingredients} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                    ingredientAdded={this.addIngredientHandler} \n                    ingredientRemoved={this.removeIngredientHandler} \n                    disabled={disableInfo}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchasable} \n                    ordered={this.purchaseHandler}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default BurguerBuilder;\n","import React from 'react';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}