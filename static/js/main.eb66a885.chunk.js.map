{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","React","memo","modalClosed","Modal","style","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurguerBuilder","purchasing","isPurchasable","ings","igkey","sum","purchaseHandler","purchaseCancelHandler","purchaseContinuedHandler","history","push","disableInfo","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","OrderSummary","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","CheckoutSummary","width","margin","display","checkoutCancelled","checkoutContinued","input","inputElement","validationError","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","valueType","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","console","log","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","forElement","withRouter","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","amount","ingredientOutput","ig","border","padding","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","BurgerBuilder","Boolean","window","location","hostname","INGREDIENT_PRICES","salad","cheese","bacon","meat","initialState","reducer","action","updatedState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb66a885.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load8\":\"Spinner_load8__36vjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport classes from './Logo.module.css';\nimport burgerLogo from '../../assets/images/burger-logo.png';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"Burger Logo\" />\n    </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link} \n            activeClassName={classes.active}\n            exact={props.exact}\n        >\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;\n","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burguer Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;\n","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport ToggleButton from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <ToggleButton clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}>{props.children}</div> : null\n);\n\nexport default backdrop;\n","import React from 'react';\n\nimport classes from './SideDrawer.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default sideDrawer;\n","import React, {Component} from 'react';\n\nimport Aux from '../Auxiliary/Auxiliary';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {\n        return(\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer \n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler}\n                />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    }\n}\n\nexport default Layout;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://the-burguer-builder-app.firebaseio.com/',\n});\n\nexport default instance;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch(this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>\n                break;\n            \n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n    \n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n    \n            case ('cheese'):\n                    ingredient = <div className={classes.Cheese}></div>\n                    break;\n                    \n            case ('salad'):\n                    ingredient = <div className={classes.Salad}></div>\n                    break;\n    \n            case ('bacon'):\n                    ingredient = <div className={classes.Bacon}></div>\n                    break;\n            \n            default:\n                ingredient = null;\n        }\n    \n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, index) => {\n                return <BurgerIngredient key={igKey + '_' + index} type={igKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) \n        transformedIngredients = <p>Please start adding ingredients!</p>;\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;\n","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less}\n            onClick={props.removed}\n            disabled={props.disabled}\n        >\n            Less\n        </button>\n        <button \n            className={classes.More}\n            onClick={props.added}\n        >\n            More\n        </button>\n    </div>\n);\n\nexport default buildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}€</strong></p>\n        {controls.map(ctrl => {\n            return <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>;\n        })}\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}\n        >\n            ORDER NOW\n        </button>\n    </div>\n);\n\nexport default buildControls;\n","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div \n            className={classes.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}\n        >\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default React.memo(modal);\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        className={[classes.Button, classes[props.btnType]].join(' ')} \n        onClick={props.clicked}\n        disabled={props.disabled}\n    >\n        {props.children}\n    </button>\n);\n\nexport default button;\n","import React from 'react';\n\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            );\n        });\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total price: {props.price.toFixed(2)}€</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    );\n}\n\nexport default orderSummary;\n","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary/Auxiliary';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        componentDidMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, {Component} from 'react';\nimport axios from '../../axios-orders';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nclass BurguerBuilder extends Component {\n    state = {\n        purchasing: false,\n        error: false\n    }\n\n    componentDidMount() {\n        // axios.get('/ingredients.json')\n        //     .then(response => {\n        //         const ingredients = response.data;\n        //         let price = this.props.price;\n        //         for (let ingredient in ingredients) {\n        //             price += INGREDIENT_PRICES[ingredient] * ingredients[ingredient];\n        //         }\n        //         this.setState({\n        //             ingredients: ingredients,\n        //             totalPrice: price\n        //         });\n        //     })\n        //     .catch(error => {\n        //         this.setState({error: true});\n        //     });\n    }\n\n    isPurchasable = () => {\n        const ingredients = this.props.ings;\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinuedHandler = () => {\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.props.ings\n        }\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p style={{textAlign: 'center'}}>Ingredients can't be loaded!</p> : <Spinner />;\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded} \n                        ingredientRemoved={this.props.onIngredientRemoved} \n                        disabled={disableInfo}\n                        price={this.props.price}\n                        purchasable={this.isPurchasable()} \n                        ordered={this.purchaseHandler}\n                    />\n                </Aux>\n            );\n\n            orderSummary = <OrderSummary \n                                ingredients={this.props.ings} \n                                purchaseCancelled={this.purchaseCancelHandler}\n                                purchaseContinued={this.purchaseContinuedHandler}\n                                price={this.props.price}\n                            />;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName}),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder, axios));\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\n","import React from 'react';\n\nimport classes from './CheckoutSummary.module.css';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nconst checkoutSummary = (props) => {\n    return(\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it taste well!</h1>\n            <div style={{width: '100%', margin: 'auto', display: 'flex'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;\n","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let validationError = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n        validationError = <p>Please enter a valid {props.valueType}!</p>;\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n            break;\n        case ('select'):\n                inputElement = <select \n                                    className={inputClasses.join(' ')}\n                                    value={props.value}\n                                    onChange={props.changed}\n                                >\n                                    {props.elementConfig.options.map(option => (\n                                        <option key={option.value} value={option.value}>\n                                            {option.displayValue}\n                                        </option>\n                                    ))}\n                                </select>;\n                break;\n        default:\n            inputElement = <input \n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} \n                                value={props.value}\n                                onChange={props.changed}\n                            />;\n    }\n\n    return(\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default input;\n","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from 'react-redux';\n\nimport classes from './ContactData.module.css';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            },\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        this.setState({loading: true});\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n\n        axios.post('/orders.json', order)\n            .then(response => {\n                console.log(response)\n                this.setState({loading: false});\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({loading: false});\n            });\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        });\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(forElement => (\n                    <Input \n                        key={forElement.id}\n                        elementType={forElement.config.elementType} \n                        elementConfig={forElement.config.elementConfig} \n                        value={forElement.config.value}\n                        valueType={forElement.config.elementConfig.placeholder}\n                        invalid={!forElement.config.valid}\n                        shouldValidate={forElement.config.validation}\n                        touched={forElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, forElement.id)}\n                    />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />;\n        }\n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    };\n};\n\nexport default connect(mapStateToProps)(withRouter(ContactData));","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport CheckoutSmmary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        return(\n                <div>\n                    <CheckoutSmmary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler}\n                    />\n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData} \n                    />\n                </div>\n            );\n    }\n}\n\nconst mapStateToProps =  state => {\n    return {\n        ings: state.ingredients\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n                    style={{\n                        textTransform: 'capitalize',\n                        display: 'inline-block',\n                        margin: '0 8px',\n                        border: '1px solid #ccc',\n                        padding: '5px'\n                    }}\n                    key={ig.name}\n                >\n                    {ig.name} ({ig.amount})\n                </span>;\n    });\n\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}€</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, {Component} from 'react';\nimport axios from '../../axios-orders';\n\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        id: key,\n                        ...res.data[key]\n                    });\n                }\n                this.setState({\n                    loading: false,\n                    orders: fetchedOrders\n                });\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    bacon: 0.7,\n    meat: 1.3\n}\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        cheese: 0,\n        bacon: 0,\n        meat: 0\n    },\n    totalPrice: 5\n};\n\nconst reducer = (state = initialState, action) => {\n    let updatedState = {\n        ...state,\n        ingredients: {\n            ...state.ingredients\n        }\n    };\n\n    const ingredient = action.ingredientName;\n\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT:\n            updatedState.ingredients[ingredient] =  state.ingredients[ingredient] + 1;\n            updatedState.totalPrice = state.totalPrice + INGREDIENT_PRICES[ingredient];\n            break;\n        case actionTypes.REMOVE_INGREDIENT:\n            updatedState.ingredients[ingredient] =  state.ingredients[ingredient] - 1;\n            updatedState.totalPrice = state.totalPrice - INGREDIENT_PRICES[ingredient];\n            break;\n        default:\n            console.log(\"Action default case\");\n            break;\n    }\n\n    return updatedState;\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/burgerBuilder';\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename='/burguer-builder/'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}