{"version":3,"sources":["store/actions/actionTypes.js","hoc/Auxiliary/Auxiliary.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","store/actions/burgerBuilder.js","store/actions/index.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","store/actions/order.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","aux","props","children","authSuccess","token","userId","type","actionTypes","idToken","logout","localStorage","removeItem","checkAuthTimeout","exporationTime","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","error","authFail","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","addIngredient","name","ingredientName","removeIngredient","initIngredients","get","ingredients","purchaseBurger","orderData","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseBurgerInit","fetchOrders","queryParams","res","orders","fetchedOrders","key","push","err","backdrop","show","className","classes","Backdrop","onClick","clicked","React","memo","modalClosed","Modal","style","transform","opacity","button","Button","btnType","join","disabled","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","this","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","Component","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","map","igKey","Array","_","index","reduce","arr","el","concat","length","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","isAuthenticated","Fragment","NavigationItems","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","isPurchasable","ings","igkey","sum","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinuedHandler","onInitPurchase","onInitIngredients","disableInfo","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","OrderSummary","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","INGREDIENT_PRICES","salad","cheese","bacon","meat","initialState","building","reducer","action","updatedState","JSON","parse","stringify","setIngredient","fetchIngredientFail","console","log","loading","purchased","purchaseBurgerStart","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","newOrder","authRedirectPath","authStart","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.282971e0.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","const aux = (props) => props.children;\n\nexport default aux;\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nconst FIREBASE_API_TOKEN = 'AIzaSyD_yzOfZNril23UYfoTG2-4FfVQJK_ZhBY';\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const authStart = () => {\n    return { \n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (exporationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, exporationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        \n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=' + FIREBASE_API_TOKEN;\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + FIREBASE_API_TOKEN;\n        }\n\n        axios.post(url, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(error => {\n                dispatch(authFail(error.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n            }\n        }\n    };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://the-burguer-builder-app.firebaseio.com/',\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data));\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed());\n            });\n    };\n};\n","export {\n    addIngredient,\n    removeIngredient,\n    initIngredients\n} from './burgerBuilder';\n\nexport {\n    purchaseBurger,\n    purchaseBurgerInit,\n    fetchOrders\n} from './order';\n\nexport {\n    auth,\n    logout,\n    setAuthRedirectPath,\n    authCheckState\n} from './auth';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\nexport const purchaseBurgerInit = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        id: key,\n                        ...res.data[key]\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err));\n            });\n    };\n};\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}>{props.children}</div> : null\n);\n\nexport default backdrop;\n","import React from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div \n            className={classes.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}\n        >\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default React.memo(modal);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button \n        className={[classes.Button, classes[props.btnType]].join(' ')} \n        onClick={props.clicked}\n        disabled={props.disabled}\n    >\n        {props.children}\n    </button>\n);\n\nexport default button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary/Auxiliary';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        UNSAFE_componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch(this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>\n                break;\n            \n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n    \n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break;\n    \n            case ('cheese'):\n                    ingredient = <div className={classes.Cheese}></div>\n                    break;\n                    \n            case ('salad'):\n                    ingredient = <div className={classes.Salad}></div>\n                    break;\n    \n            case ('bacon'):\n                    ingredient = <div className={classes.Bacon}></div>\n                    break;\n            \n            default:\n                ingredient = null;\n        }\n    \n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, index) => {\n                return <BurgerIngredient key={igKey + '_' + index} type={igKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) \n        transformedIngredients = <p>Please start adding ingredients!</p>;\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load8\":\"Spinner_load8__36vjM\"};","import React from 'react';\n\nimport classes from './Logo.module.css';\nimport burgerLogo from '../../assets/images/burger-logo.png';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"Burger Logo\" />\n    </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link} \n            activeClassName={classes.active}\n            exact={props.exact}\n        >\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;\n","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => {\n    let navigationItems = <NavigationItem link=\"/auth\">Authenticate</NavigationItem>;\n    if (props.isAuthenticated) {\n        navigationItems = (\n            <React.Fragment>\n                <NavigationItem link=\"/orders\">Orders</NavigationItem>\n                <NavigationItem link=\"/logout\">Logout</NavigationItem>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n            {navigationItems}\n        </ul>\n    );\n};\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;\n","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport ToggleButton from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <ToggleButton clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './SideDrawer.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav onClick={props.closed}>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default sideDrawer;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Aux from '../Auxiliary/Auxiliary';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {\n        return(\n            <Aux>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler}\n                />\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer} \n                    closed={this.sideDrawerClosedHandler}\n                />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less}\n            onClick={props.removed}\n            disabled={props.disabled}\n        >\n            Less\n        </button>\n        <button \n            className={classes.More}\n            onClick={props.added}\n        >\n            More\n        </button>\n    </div>\n);\n\nexport default buildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}€</strong></p>\n        {controls.map(ctrl => {\n            return <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>;\n        })}\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}\n        >\n            {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n        </button>\n    </div>\n);\n\nexport default buildControls;\n","import React from 'react';\n\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            );\n        });\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total price: {props.price.toFixed(2)}€</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    );\n}\n\nexport default orderSummary;\n","import React, {Component} from 'react';\nimport axios from '../../axios-orders';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    isPurchasable = () => {\n        const ingredients = this.props.ings;\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinuedHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.props.ings\n        }\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p style={{textAlign: 'center'}}>Ingredients can't be loaded!</p> : <Spinner />;\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded} \n                        ingredientRemoved={this.props.onIngredientRemoved} \n                        disabled={disableInfo}\n                        price={this.props.price}\n                        purchasable={this.isPurchasable()} \n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                    />\n                </Aux>\n            );\n\n            orderSummary = <OrderSummary \n                                ingredients={this.props.ings} \n                                purchaseCancelled={this.purchaseCancelHandler}\n                                purchaseContinued={this.purchaseContinuedHandler}\n                                price={this.props.price}\n                            />;\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () =>  dispatch(actions.purchaseBurgerInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport * as actions from '../../../store/actions/auth';\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to=\"/\" />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount () {\n            importComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default});\n                });\n        }\n        \n        render () {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;\n","import React, {Component} from 'react';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/auth';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    bacon: 0.7,\n    meat: 1.3\n}\n\nconst BASE_PRICE = 4;\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: BASE_PRICE,\n    error: false,\n    building: false\n};\n\nconst reducer = (state = initialState, action) => {\n    let updatedState = JSON.parse(JSON.stringify(state));\n\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT:\n            updatedState = addIngredient(state, action, updatedState);\n            break;\n        case actionTypes.REMOVE_INGREDIENT:\n            updatedState = removeIngredient(state, action, updatedState);\n            break;\n        case actionTypes.SET_INGREDIENTS:\n            updatedState = setIngredient(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            updatedState = fetchIngredientFail(state, action, updatedState);\n            break;\n        default:\n            console.log(\"[BurgerBuilder Reducer] Action default case\");\n            break;\n    }\n\n    return updatedState;\n};\n\nexport default reducer;\n\n// Auxiliary Functions\nconst addIngredient = (state, action, updatedState) => {\n    updatedState.ingredients[action.ingredientName] =  state.ingredients[action.ingredientName] + 1;\n    updatedState.totalPrice = state.totalPrice + INGREDIENT_PRICES[action.ingredientName];\n    updatedState.building = true;\n    return updatedState;\n}\n\nconst removeIngredient = (state, action, updatedState) => {\n    updatedState.ingredients[action.ingredientName] =  state.ingredients[action.ingredientName] - 1;\n    updatedState.totalPrice = state.totalPrice - INGREDIENT_PRICES[action.ingredientName];\n    updatedState.building = true;\n    return updatedState;\n}\n\nconst setIngredient = (state, action, updatedState) => {\n    let price = BASE_PRICE;\n    for (let ingredient in action.ingredients) {\n        price += INGREDIENT_PRICES[ingredient] * action.ingredients[ingredient];\n    }\n    updatedState.ingredients = {\n        salad: action.ingredients.salad,\n        cheese: action.ingredients.cheese,\n        bacon: action.ingredients.bacon,\n        meat: action.ingredients.meat\n    };\n    updatedState.totalPrice = price;\n    updatedState.error = false;\n    updatedState.building = false;\n    return updatedState;\n}\n\nconst fetchIngredientFail = (state, action, updatedState) => {\n    updatedState.error = true;\n    return updatedState;\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst reducer = (state = initialState, action) => {\n    let updatedState = JSON.parse(JSON.stringify(state));\n\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_BURGER_INIT:\n            updatedState = purchaseBurgerInit(state, action, updatedState);\n            break;\n        case actionTypes.PURCHASE_BURGER_START:\n            updatedState = purchaseBurgerStart(state, action, updatedState);\n            break;\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            updatedState = purchaseBurgerSuccess(state, action, updatedState);\n            break;\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            updatedState = purchaseBurgerFail(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_ORDERS_START:\n            updatedState = fetchOrdersStart(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            updatedState = fetchOrdersSuccess(state, action, updatedState);\n            break;\n        case actionTypes.FETCH_ORDERS_FAIL:\n            updatedState = fetchOrdersFail(state, action, updatedState);\n            break;\n        default:\n            console.log(\"[Order Reducer] Action default case\");\n            break;\n    }\n\n    return updatedState;\n};\n\nexport default reducer;\n\n// Auxiliary Functions\nconst purchaseBurgerInit = (state, action, updatedState) => {\n    updatedState.purchased = false;\n    return updatedState;\n}\n\nconst purchaseBurgerStart = (state, action, updatedState) => {\n    updatedState.loading = true;\n    return updatedState;\n}\n\nconst purchaseBurgerSuccess = (state, action, updatedState) => {\n    const newOrder = {\n        id: action.orderId,\n        ...action.orderData\n    };\n    updatedState.loading = false;\n    updatedState.purchased = true;\n    updatedState.orders = state.orders.concat(newOrder);\n    return updatedState;\n}\n\nconst purchaseBurgerFail = (state, action, updatedState) => {\n    updatedState.loading = false;\n    return updatedState;\n}\n\nconst fetchOrdersStart = (state, action, updatedState) => {\n    updatedState.loading = true;\n    return updatedState;\n}\n\nconst fetchOrdersSuccess = (state, action, updatedState) => {\n    updatedState.loading = false;\n    updatedState.orders = action.orders;\n    return updatedState;\n}\n\nconst fetchOrdersFail = (state, action, updatedState) => {\n    updatedState.loading = false;\n    return updatedState;\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst reducer = (state = initialState, action) => {\n    let updatedState = JSON.parse(JSON.stringify(state));\n\n    switch ( action.type ) {\n        case actionTypes.AUTH_START:\n            updatedState = authStart(state, action, updatedState);\n            break;\n        case actionTypes.AUTH_SUCCESS:\n            updatedState = authSuccess(state, action, updatedState);\n            break;\n        case actionTypes.AUTH_FAIL:\n            updatedState = authFail(state, action, updatedState);\n            break;\n        case actionTypes.AUTH_LOGOUT:\n            updatedState = authLogout(state, action, updatedState);\n            break;\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            updatedState = setAuthRedirectPath(state, action, updatedState);\n            break;\n        default:\n            console.log(\"[Auth Reducer] Action default case\");\n            break;\n    }\n\n    return updatedState;\n};\n\nexport default reducer;\n\n// Auxiliary Functions\nconst authStart = (state, action, updatedState) => {\n    updatedState.error = null;\n    updatedState.loading = true;\n    return updatedState;\n}\n\nconst authSuccess = (state, action, updatedState) => {\n    updatedState.token = action.idToken;\n    updatedState.userId = action.userId;\n    updatedState.error = null;\n    updatedState.loading = false;\n    return updatedState;\n}\n\nconst authFail = (state, action, updatedState) => {\n    updatedState.error = action.error;\n    updatedState.loading = false;\n    return updatedState;\n}\n\nconst authLogout = (state, action, updatedState) => {\n    updatedState.token = null;\n    updatedState.userId = null;\n    return updatedState;\n}\n\nconst setAuthRedirectPath = (state, action, updatedState) => {\n    updatedState.authRedirectPath = action.path;\n    return updatedState;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename='/burger-builder/'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}